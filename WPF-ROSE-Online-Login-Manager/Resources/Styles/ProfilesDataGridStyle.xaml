<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Common Setters -->
    <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="#343b48"/>
    <SolidColorBrush x:Key="DataGridForegroundBrush" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="DataGridSelectedBackgroundBrush" Color="#347ea3"/>
    <SolidColorBrush x:Key="DataGridSelectedForegroundBrush" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="DataGridHoverBackgroundBrush" Color="#245f82"/>
    <SolidColorBrush x:Key="DataGridHoverForegroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="DataGridOfflineForegroundBrush" Color="#839096"/>
    <SolidColorBrush x:Key="DataGridOnlineForegroundBrush" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="DataGridHeaderBackgroundBrush" Color="#1a95d4"/>
    
    <!-- Override SystemColors Class Defaults -->
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#347ea3"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#347ea3"/>
    
    <!-- Data Grid -->
    <Style x:Key="DataGrid_Style" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{StaticResource DataGridForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource DataGridHeaderBackgroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBackgroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="20 5" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#2c313c"/>
        <Setter Property="VerticalGridLinesBrush" Value="#2c313c"/>
        <Setter Property="SelectedItem" Value="{Binding SelectedItem, Mode=TwoWay}"/>
        <Style.Resources>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Width" Value="6" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            </Style>
        </Style.Resources>
    </Style>

    <!-- Cell -->
    <Style x:Key="DataGridCell_Style" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers> 
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding ProfileStatus}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#363232"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellCenter_Style" TargetType="DataGridCell">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding ProfileStatus}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#363232"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Row -->
    <Style x:Key="DataGridRow_Style" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource DataGridBackgroundBrush}"/>
        <Setter Property="Height" Value="25" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ProfileStatus}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DataGridOfflineForegroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ProfileStatus}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource DataGridOnlineForegroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGridHoverBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DataGridSelectedBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Row Header -->
    <Style x:Key="DataGridRowHeader_Style" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="0"/>
    </Style>
    
    <!-- Column Header -->
    <Style x:Key="DataGridColHeader_Style" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource DataGridHeaderBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    
    <Style x:Key="DataGridColHeaderCenter_Style" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource DataGridHeaderBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
    </Style>
    
    <!-- Status Column ToUpper -->
    <DataTemplate x:Key="StatusColumnTemplate">
        <TextBlock Text="{Binding ProfileStatus}" TextAlignment="Center" />
    </DataTemplate>

    <Style x:Key="UppercaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ProfileStatus}" Value="True">
                <Setter Property="Text" Value="ONLINE" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ProfileStatus}" Value="False">
                <Setter Property="Text" Value="OFFLINE" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>